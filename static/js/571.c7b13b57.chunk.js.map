{"version":3,"file":"static/js/571.c7b13b57.chunk.js","mappings":"wMAGaA,EAAcC,EAAAA,GAAAA,IAAH,+FAOXC,EAAaD,EAAAA,GAAAA,IAAH,iIASVE,EAAcF,EAAAA,GAAAA,IAAH,2CAIXG,EAAUH,EAAAA,GAAAA,EAAH,kJAQPI,EAAUJ,EAAAA,GAAAA,EAAH,iE,SCnBPK,EAAO,SAAC,GAA4C,IAAD,IAAzCC,KAAQC,EAAiC,EAAjCA,MAAOC,EAA0B,EAA1BA,KAAMC,EAAoB,EAApBA,YAC1C,OACE,UAACV,EAAD,YACE,SAACE,EAAD,WACE,gBAAKS,IAAKH,EAAMI,IAAKC,IAAKJ,OAG5B,UAACN,EAAD,YACE,SAACC,EAAD,UAAUK,KACV,SAACJ,EAAD,UAAUK,SAIjB,C,8ECtBYI,EAAS,WACpB,OACE,SAAC,KAAD,CACEC,OAAO,MACPC,MAAM,MACNC,MAAM,UACNC,OAAO,IACPC,aAAc,CACZC,SAAU,QACVC,IAAK,MACLC,KAAM,OACNC,UAAW,yBAEbC,aAAa,GACbC,SAAS,EACTC,UAAU,iBAGf,C,sNClBYC,EAAU1B,EAAAA,GAAAA,IAAH,6XAqBP2B,EAAM3B,EAAAA,GAAAA,IAAH,kP,SClBH4B,EAAU,WACrB,OACE,SAACD,EAAD,CAAKE,UAAU,OAAf,UACE,SAACH,EAAD,WACE,gBAAKhB,IAAKoB,EAAMlB,IAAI,uBAI3B,ECXYc,EAAU1B,EAAAA,GAAAA,IAAH,2UAiBP2B,EAAM3B,EAAAA,GAAAA,IAAH,oPCdH+B,EAAU,WACrB,OACE,SAAC,EAAD,CAAKF,UAAU,OAAf,UACE,SAAC,EAAD,WACE,gBAAKnB,IAAKoB,EAAMlB,IAAI,mBAI3B,E,4BCVYoB,GAAgBhC,EAAAA,EAAAA,IAAOiC,EAAAA,GAAPjC,CAAH,sQAkBbkC,GAAgBlC,EAAAA,EAAAA,IAAOmC,EAAAA,GAAPnC,CAAH,8I,SCTboC,EAAS,SAAC,GAAc,IAAZ9B,EAAW,EAAXA,KACvB,OACE,iCACE,SAAC0B,EAAD,CACEK,QAAS,CAACC,EAAAA,GAAYC,EAAAA,IACtBC,WAAY,CACVC,OAAQ,QACRC,OAAQ,SAEVC,YAAa,CACX,EAAG,CACDC,cAAe,GAGjB,IAAK,CACHA,cAAe,EACfC,aAAc,IAGhB,KAAM,CACJD,cAAe,EACfC,aAAc,IAGhB,KAAM,CACJD,cAAe,EACfC,aAAc,KAvBpB,SA2BGvC,EAAKwC,KAAI,gBAAGC,EAAH,EAAGA,GAAOC,GAAV,mBACR,SAACd,EAAD,WACE,SAAC7B,EAAA,EAAD,CAAMC,KAAM0C,KADMD,EADZ,OAMZ,SAACnB,EAAD,KACA,SAACG,EAAD,MAGL,EClDYkB,EAAYjD,EAAAA,GAAAA,IAAH,yIASTkD,EAAYlD,EAAAA,GAAAA,GAAH,yKC+BtB,EA9Ba,WACX,OAAwBmD,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAO,mCAAG,oGAEZF,GAAW,GAFC,UAGOG,EAAAA,EAAAA,KAHP,OAGNpD,EAHM,OAIZ+C,EAAQ/C,GACRiD,GAAW,GALC,sDAON,IAAII,MAAM,6BAA8B,KAAMC,SAPxC,yDAAH,qDAWbH,GACD,GAAE,KAGD,UAACR,EAAD,WACGK,IAAW,SAACzC,EAAA,EAAD,KAEVyC,IAAW,SAACJ,EAAD,wBAEZE,IAASE,IAAW,SAAClB,EAAD,CAAQ9B,KAAM8C,MAGxC,C,gGCrCDS,EAAAA,EAAAA,SAAAA,QAAyB,+BACzBA,EAAAA,EAAAA,SAAAA,QAAAA,OAAAA,aACEC,wEAEF,IAAMC,EAAS,CACbC,MAAO,EACPC,KAAM,GAIKP,EAAW,mCAAG,sGACFG,EAAAA,EAAAA,IAAU,UAAW,CAAEE,OAAAA,IADrB,uBACjBzD,EADiB,EACjBA,KADiB,kBAElBA,GAFkB,2CAAH,oD","sources":["components/Card/Card.styled.js","components/Card/Card.jsx","components/Loader/Loader.js","components/Btns/PrevBtn.styled.js","components/Btns/PrevBtn.jsx","components/Btns/NextBtn.styled.js","components/Btns/NextBtn.jsx","components/Slider/Slider.styled.js","components/Slider/Slider.jsx","pages/Home/Home.styled.js","pages/Home/Home.jsx","services/theDogApi.js"],"sourcesContent":["// Utils\nimport styled from 'styled-components';\n\nexport const CardWrapper = styled.div`\n  border-radius: 4px;\n  width: 100%;\n\n  border: 3px solid #f2f2f2;\n`;\n\nexport const ImgWrapper = styled.div`\n  > img {\n    width: 100%;\n    height: 364px;\n    object-fit: cover;\n    object-position: top;\n  }\n`;\n\nexport const DescWrapper = styled.div`\n  margin: 0 28px;\n`;\n\nexport const DogName = styled.p`\n  font-weight: 600;\n  font-size: 12px;\n  letter-spacing: -0.03em;\n  text-transform: uppercase;\n  margin-bottom: 8px;\n`;\n\nexport const DogDesc = styled.p`\n  font-weight: 700;\n  font-size: 19px;\n`;\n","// Utils\nimport PropTypes from 'prop-types';\n\n// Styles\nimport {\n  CardWrapper,\n  DogName,\n  DogDesc,\n  ImgWrapper,\n  DescWrapper,\n} from './Card.styled';\n\nexport const Card = ({ data: { image, name, temperament } }) => {\n  return (\n    <CardWrapper>\n      <ImgWrapper>\n        <img src={image.url} alt={name} />\n      </ImgWrapper>\n\n      <DescWrapper>\n        <DogName>{name}</DogName>\n        <DogDesc>{temperament}</DogDesc>\n      </DescWrapper>\n    </CardWrapper>\n  );\n};\n\nCard.propTypes = {\n  data: PropTypes.shape({\n    image: PropTypes.object.isRequired,\n    name: PropTypes.string.isRequired,\n    temperament: PropTypes.string.isRequired,\n  }).isRequired,\n};\n","// Utils\nimport { Rings } from 'react-loader-spinner';\n\nexport const Loader = () => {\n  return (\n    <Rings\n      height=\"200\"\n      width=\"200\"\n      color=\"#fb6d3a\"\n      radius=\"6\"\n      wrapperStyle={{\n        position: 'fixed',\n        top: '50%',\n        left: ' 50%',\n        transform: 'translate(-50%, -50%)',\n      }}\n      wrapperClass=\"\"\n      visible={true}\n      ariaLabel=\"rings-loading\"\n    />\n  );\n};\n","// Utils\nimport styled from 'styled-components';\n\nexport const Ellipse = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 50px;\n  height: 50px;\n  border-radius: 50%;\n  background: #ffffff;\n  border: 1.7px solid #f8f8f8;\n  box-shadow: 0px 3.4px 17px rgba(0, 0, 0, 0.1);\n\n  @media (min-width: 480px) {\n    width: 68px;\n    height: 68px;\n  }\n\n  > img {\n    transform: rotate(180deg);\n  }\n`;\n\nexport const Btn = styled.div`\n  position: absolute;\n  top: 48%;\n  left: 0%;\n  z-index: 2;\n  cursor: pointer;\n\n  @media (min-width: 480px) {\n    left: 6%;\n  }\n\n  &.swiper-button-disabled {\n    opacity: 0;\n    pointer-events: none;\n  }\n`;\n","// Assets\nimport icon from '../../assets/imgs/Mask.png';\n\n// Styles\nimport { Ellipse, Btn } from './PrevBtn.styled';\n\nexport const PrevBtn = () => {\n  return (\n    <Btn className=\"prev\">\n      <Ellipse>\n        <img src={icon} alt=\"previous button\" />\n      </Ellipse>\n    </Btn>\n  );\n};\n","// Utils\nimport styled from 'styled-components';\n\nexport const Ellipse = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  width: 50px;\n  height: 50px;\n  border-radius: 50%;\n  background: #ffffff;\n  border: 1.7px solid #f8f8f8;\n  box-shadow: 0px 3.4px 17px rgba(0, 0, 0, 0.1);\n\n  @media (min-width: 480px) {\n    width: 68px;\n    height: 68px;\n  }\n`;\n\nexport const Btn = styled.div`\n  position: absolute;\n  top: 48%;\n  right: 0%;\n  z-index: 2;\n  cursor: pointer;\n\n  @media (min-width: 480px) {\n    right: 6%;\n  }\n\n  &.swiper-button-disabled {\n    opacity: 0;\n    pointer-events: none;\n  }\n`;\n","// Assets\nimport icon from '../../assets/imgs/Mask.png';\n\n// Styles\nimport { Ellipse, Btn } from './NextBtn.styled';\n\nexport const NextBtn = () => {\n  return (\n    <Btn className=\"next\">\n      <Ellipse>\n        <img src={icon} alt=\"next button\" />\n      </Ellipse>\n    </Btn>\n  );\n};\n","// Utils\nimport styled from 'styled-components';\nimport { Swiper, SwiperSlide } from 'swiper/react';\n\nexport const SwiperWrapper = styled(Swiper)`\n  @media (min-width: 1360px) {\n    width: 1360px;\n  }\n\n  @media (max-width: 1339px) {\n    width: 860px;\n  }\n\n  @media (max-width: 1023px) {\n    max-width: 720px;\n  }\n\n  @media (max-width: 767px) {\n    max-width: 320px;\n  }\n`;\n\nexport const SliderWrapper = styled(SwiperSlide)`\n  @media (min-width: 1024px) {\n    max-width: 420px;\n  }\n\n  @media (max-width: 1024px) {\n    width: 320px;\n  }\n`;\n","// Utils\nimport { Navigation, A11y } from 'swiper';\nimport PropTypes from 'prop-types';\n\n// Components\nimport { Card } from 'components/Card';\nimport { NextBtn, PrevBtn } from 'components/Btns';\n\n// Styles\nimport 'swiper/css';\nimport 'swiper/css/navigation';\nimport { SwiperWrapper, SliderWrapper } from './Slider.styled';\n\nexport const Slider = ({ data }) => {\n  return (\n    <>\n      <SwiperWrapper\n        modules={[Navigation, A11y]}\n        navigation={{\n          prevEl: '.prev',\n          nextEl: '.next',\n        }}\n        breakpoints={{\n          0: {\n            slidesPerView: 1,\n          },\n\n          768: {\n            slidesPerView: 2,\n            spaceBetween: 20,\n          },\n\n          1024: {\n            slidesPerView: 2,\n            spaceBetween: 30,\n          },\n\n          1340: {\n            slidesPerView: 3,\n            spaceBetween: 34,\n          },\n        }}\n      >\n        {data.map(({ id, ...otherProps }) => (\n          <SliderWrapper key={id}>\n            <Card data={otherProps} />\n          </SliderWrapper>\n        ))}\n      </SwiperWrapper>\n      <PrevBtn />\n      <NextBtn />\n    </>\n  );\n};\n\nSlider.propTypes = {\n  data: PropTypes.arrayOf(PropTypes.object.isRequired).isRequired,\n};\n","// Utils\nimport styled from 'styled-components';\n\nexport const Container = styled.div`\n  flex-grow: 1;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n\n  padding: 0 115px;\n`;\n\nexport const PageTitle = styled.h1`\n  color: #000000;\n  font-weight: 700;\n  font-size: 36px;\n\n  margin-bottom: 16px;\n\n  @media (max-width: 480px) {\n    margin: 0 auto;\n  }\n`;\n","// Core\nimport { useState, useEffect } from 'react';\n\n// API\nimport { fetchBreeds } from '../../services/theDogApi';\n\n// Components\nimport { Loader } from 'components/Loader';\nimport { Slider } from 'components/Slider/Slider';\n\n// Styles\nimport { Container, PageTitle } from './Home.styled';\n\nconst Home = () => {\n  const [dogs, setDogs] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const getDogs = async () => {\n      try {\n        setLoading(true);\n        const data = await fetchBreeds();\n        setDogs(data);\n        setLoading(false);\n      } catch (error) {\n        throw new Error('Something went wrong, oops', error.message);\n      }\n    };\n\n    getDogs();\n  }, []);\n\n  return (\n    <Container>\n      {loading && <Loader />}\n\n      {!loading && <PageTitle>Home Page</PageTitle>}\n\n      {dogs && !loading && <Slider data={dogs} />}\n    </Container>\n  );\n};\n\nexport default Home;\n","// Utils\nimport axios from 'axios';\n\n// Setups\naxios.defaults.baseURL = 'https://api.thedogapi.com/v1';\naxios.defaults.headers.common['x-api-key'] =\n  process.env.REACT_APP_THE_CATDOG_API_KEY;\n\nconst params = {\n  limit: 8,\n  page: 9,\n};\n\n// HTTP requests\nexport const fetchBreeds = async () => {\n  const { data } = await axios.get('/breeds', { params });\n  return data;\n};\n"],"names":["CardWrapper","styled","ImgWrapper","DescWrapper","DogName","DogDesc","Card","data","image","name","temperament","src","url","alt","Loader","height","width","color","radius","wrapperStyle","position","top","left","transform","wrapperClass","visible","ariaLabel","Ellipse","Btn","PrevBtn","className","icon","NextBtn","SwiperWrapper","Swiper","SliderWrapper","SwiperSlide","Slider","modules","Navigation","A11y","navigation","prevEl","nextEl","breakpoints","slidesPerView","spaceBetween","map","id","otherProps","Container","PageTitle","useState","dogs","setDogs","loading","setLoading","useEffect","getDogs","fetchBreeds","Error","message","axios","process","params","limit","page"],"sourceRoot":""}